[tool.poetry]
name = "tgbot"
version = "0.0.0"
description = "tgbot microservice for admin notify"
authors = ["GigantPro <pochtagigantpro@gmail.com>"]
license = "GPLv3 License (GPLv3)"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
pytelegrambotapi = "^4.14.0"
aiohttp = "^3.9.1"
fastapi = "^0.104.1"
loguru = "^0.7.2"
uvicorn = "^0.24.0.post1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = [
    "F",   # https://beta.ruff.rs/docs/rules/#pyflakes-f
    "W",   # https://beta.ruff.rs/docs/rules/#warning-w
    "E",   # https://beta.ruff.rs/docs/rules/#error-e
    "I",   # https://beta.ruff.rs/docs/rules/#isort-i
    "N",   # https://beta.ruff.rs/docs/rules/#pep8-naming-n
    "ANN", # https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "B",   # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "RUF", # https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
    "PT",  # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
]
include = ["*.py"]
force-exclude = true
lint.fixable = ["ALL"]

exclude = [".mypy_cache", ".ruff_cache", ".venv", "__pypackages__", "alembic"]
line-length = 120

lint.ignore = [
    "B008",  # do not perform function calls in argument defaults
    "ANN101",  # Missing type annotation for `self` in method
    "RUF009",  # Do not perform function call `get_str_env` in dataclass defaults
]
